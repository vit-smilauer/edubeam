#!/usr/bin/python
# -*- coding: utf-8 -*-
import os, sys
import subprocess
import unittest

try:
    self.openFile('test01.xml')
    self.solve()
except:
    print('run as: python edubeam.py -e test01.py')
    exit(0)
    
#a=[]
#for n in sortedNodes:
    #a.append( [ n.label, r[n.loc[0]], r[n.loc[1]],r[n.loc[2]],f[n.loc[0]],f[n.loc[1]],f[n.loc[2]]] )
#b=array(a)
#COPY+PASTE
#Correct solution
co = array([['1', '0.0', '0.0', '0.0', '-1.0', '-5.0', '15.0'],
       ['2', '1.66666666667e-06', '0.00333333333333', '-0.00166666666667',
        '1.0', '5.0', '0.0'],
       ['3', '0.0', '0.0', '0.0', '0.0', '-15.0', '22.5'],
       ['4', '0.0', '0.00375', '-0.00166666666667', '0.0', '7.5', '3.75'],
       ['5', '0.0', '0.0', '0.0', '0.0', '1.7763568394e-15', '5.0'],
       ['6', '0.0', '0.00166666666667', '-0.00111111111111', '0.0', '0.0',
        '-5.0'],
       ['7', '0.0', '0.0', '0.0', '0.0', '-7.1054273576e-15',
        '2.13162820728e-14'],
       ['8', '0.0009', '-0.0054', '0.0036', '540.0', '0.0', '16.2'],
       ['9', '0.0', '0.0', '-0.000208333333333', '-1.0', '-2.5', '0.0'],
       ['10', '8.33333333333e-07', '0.0', '0.000208333333333', '0.0',
        '-2.5', '0.0'],
       ['11', '8.33333333333e-07', '0.000208333333333', '0.0', '1.0',
        '5.0', '0.0'],
       ['12', '0.0', '0.0', '-0.000416666666667', '0.0', '-7.5', '-0.9375'],
       ['13', '0.0', '0.0', '0.000416666666667', '0.0', '-7.5', '0.9375'],
       ['14', '0.0', '0.000390625', '0.0', '0.0', '7.5', '0.0'],
       ['15', '0.0', '0.0', '4.62962962963e-05', '0.0', '1.66666666667',
        '0.0'],
       ['16', '0.0', '0.0', '4.62962962963e-05', '0.0', '-1.66666666667',
        '0.0'],
       ['17', '0.0', '0.0', '-9.25925925926e-05', '0.0', '0.0', '-5.0'],
       ['18', '0.0', '0.0', '-0.0018', '0.0', '0.0', '-16.2'],
       ['19', '0.00045', '0.00135', '-3.08395284618e-20', '0.0', '0.0',
        '0.0'],
       ['20', '0.0009', '0.0', '0.0018', '540.0', '1.31006316906e-14',
        '16.2'],
       ['21', '0.0', '0.0', '0.0', '-1.0', '-3.4375', '2.8125'],
       ['22', '8.33333333333e-07', '9.11458333333e-05',
        '-2.60416666667e-05', '1.0', '5.0', '0.0'],
       ['23', '8.33333333333e-07', '0.0', '0.000104166666667', '0.0',
        '-1.5625', '0.0'],
       ['24', '0.0', '0.0', '0.0', '0.0', '-9.375', '5.625'],
       ['25', '0.0', '0.00015625', '-5.20833333333e-05', '0.0', '7.5',
        '0.0'],
       ['26', '0.0', '0.0', '0.000208333333333', '0.0', '-5.625', '0.9375'],
       ['27', '0.0', '0.0', '0.0', '0.0', '1.875', '-0.625'],
       ['28', '0.0', '2.60416666667e-05', '-8.68055555556e-05', '0.0',
        '0.0', '-5.0'],
       ['29', '0.0', '0.0', '6.94444444444e-05', '0.0', '-1.875', '0.0'],
       ['30', '0.0', '0.0', '0.0', '0.0', '-8.1', '24.3'],
       ['31', '0.00045', '0.0003375', '-0.000225', '0.0', '0.0', '0.0'],
       ['32', '0.0009', '0.0', '0.0009', '540.0', '8.1', '16.2'],
       ['33', '0.0', '0.0', '0.0', '-0.5', '-2.5', '1.875'],
       ['34', '4.16666666667e-07', '5.20833333333e-05', '0.0', '1.0',
        '5.0', '0.0'],
       ['35', '0.0', '0.0', '0.0', '-0.5', '-2.5', '-1.875'],
       ['36', '0.0', '0.0', '0.0', '0.0', '-7.5', '3.75'],
       ['37', '0.0', '7.8125e-05', '0.0', '0.0', '7.5', '0.0'],
       ['38', '0.0', '0.0', '0.0', '0.0', '-7.5', '-3.75'],
       ['39', '0.0', '0.0', '0.0', '0.0', '2.5', '-1.25'],
       ['40', '0.0', '0.0', '-6.94444444444e-05', '0.0', '0.0', '-5.0'],
       ['41', '0.0', '0.0', '0.0', '0.0', '-2.5', '-1.25'],
       ['42', '0.0', '0.0', '0.0', '540.0', '0.0', '16.2'],
       ['43', '0.0', '0.0', '0.0', '0.0', '0.0', '0.0'],
       ['44', '0.0', '0.0', '0.0', '-540.0', '0.0', '-16.2'],
       ['45', '0.0', '0.0', '-3.90625e-05', '-1.0', '-2.03125', '-0.9375'],
       ['46', '4.16666666667e-07', '0.0', '2.60416666667e-05', '0.5',
        '-3.4375', '0.9375'],
       ['47', '4.16666666667e-07', '0.0', '-1.30208333333e-05', '0.0',
        '0.46875', '0.0'],
       ['48', '0.0', '0.0', '-3.90625e-05', '0.0', '-3.28125', '-0.9375'],
       ['49', '0.0', '0.0', '2.60416666667e-05', '0.0', '-4.6875', '0.9375'],
       ['50', '0.0', '0.0', '-1.30208333333e-05', '0.0', '0.46875', '0.0'],
       ['51', '0.0', '0.0', '-0.000162037037037', '0.0', '4.16666666667',
        '-5.0'],
       ['52', '0.0', '0.0', '4.62962962963e-05', '0.0', '-5.0', '0.0'],
       ['53', '0.0', '0.0', '-2.31481481481e-05', '0.0', '0.833333333333',
        '0.0'],
       ['54', '0.0', '0.0', '-0.00045', '0.0', '16.2', '-16.2'],
       ['55', '0.00045', '0.0', '0.0', '0.0', '-32.4', '0.0'],
       ['56', '0.0009', '0.0', '0.00045', '540.0', '16.2', '16.2'],
       ['57', '0.000200091443184', '-3.67907801418e-07',
        '-7.57298745371e-05', '5.0', '1.0', '0.0'],
       ['58', '0.0', '0.0', '0.0', '-2.51832176509', '0.331117021277',
        '3.02949841822'],
       ['59', '0.000195955312792', '1.47901891253e-06',
        '-7.34033011918e-05', '0.0', '0.0', '0.0'],
       ['60', '0.0', '0.0', '0.0', '-2.48167823491', '-1.33111702128',
        '2.97715051795'],
       ['61', '0.0', '0.0', '0.0', '2.0939160107', '-7.5', '-1.38416572957'],
       ['62', '1.74493000892e-06', '8.33333333333e-06',
        '-0.000105148189797', '0.0', '7.5', '-3.75'],
       ['63', '-1.74493000892e-06', '8.33333333333e-06',
        '0.000105148189797', '0.0', '7.5', '3.75'],
       ['64', '0.0', '0.0', '0.0', '-2.0939160107', '-7.5', '1.38416572957'],
       ['65', '0.0', '0.0', '0.0', '-7.98363643414', '0.886524822695',
        '4.83731243377'],
       ['66', '0.000175045157187', '-9.85027580772e-07',
        '-2.77050863658e-05', '5.0', '0.0', '1.66666666667'],
       ['67', '0.000171684551244', '9.85027580772e-07',
        '-7.21110418191e-05', '0.0', '0.0', '0.0'],
       ['68', '0.0', '0.0', '0.0', '-2.01636356586', '-0.886524822695',
        '2.50311309814'],
       ['69', '0.0', '0.0', '0.0', '0.0', '0.0', '16.2'],
       ['70', '0.0', '0.0', '0.0', '0.0', '0.0', '0.0'],
       ['71', '0.0', '0.0', '0.0', '0.0', '0.0', '0.0'],
       ['72', '0.0', '0.0', '0.0', '0.0', '0.0', '-16.2'],
       ['73', '-5.63051232512e-22', '8.13802083333e-06',
        '7.13751573251e-06', '0.225', '3.58125', '0.234375'],
       ['74', '0.0', '0.0', '-1.10437657325e-05', '4.49114216018', '-7.5',
        '-0.234375'],
       ['75', '0.0', '0.0', '1.10437657325e-05', '-4.49114216018', '-7.5',
        '0.234375'],
       ['76', '0.0', '0.0', '-4.8924660644e-05', '2.24557108009', '-5.625',
        '-0.234375'],
       ['77', '-1.22860630153e-20', '4.06901041667e-06',
        '4.6971535644e-05', '-1.11022302463e-16', '1.875', '0.234375'],
       ['78', '0.0', '0.0', '-3.78808949115e-05', '-2.24557108009',
        '-1.875', '0.0'],
       ['79', '0.0', '0.0', '-0.000108836941412', '-7.4758779345',
        '4.16666666667', '-0.520833333333'],
       ['80', '1.20563271605e-05', '-3.53291813073e-21',
        '0.000101120892029', '3.125', '0.0', '0.520833333333'],
       ['81', '0.0', '0.0', '-9.17803425386e-05', '-5.0241220655',
        '-4.16666666667', '0.0'],
       ['82', '0.0', '0.0', '-0.000188148488069', '23.4759926577',
        '-1.13686837722e-13', '-16.2'],
       ['83', '-8.37330555563e-20', '-0.0009375', '0.000638148488069',
        '15.552', '-875.664', '16.2'],
       ['84', '0.0', '0.0', '0.000188148488069', '-23.4759926577',
        '1.13686837722e-13', '16.2'],
       ['85', '1.39886846681e-06', '7.29453789187e-06', '-1.953125e-06',
        '-2.22044604925e-16', '3.75', '0.0'],
       ['86', '-1.39886846681e-06', '7.29453789187e-06', '1.953125e-06',
        '-0.225', '3.91875', '0.1171875'],
       ['87', '2.75136703445e-05', '2.44089876959e-05', '-9.765625e-07',
        '-2.22044604925e-16', '3.75', '0.0'],
       ['88', '2.61148018777e-05', '-1.71144498041e-05', '9.765625e-07',
        '0.0', '0.0', '0.0'],
       ['89', '6.8283026104e-05', '4.60526688019e-05',
        '-3.85802469136e-06', '6.25', '0.0', '0.0'],
       ['90', '6.51178226615e-05', '-4.33281182351e-05',
        '-3.85802469136e-06', '0.0', '0.0', '0.0'],
       ['91', '1.95633272148e-05', '-0.00044185042508', '0.000225', '0.0',
        '0.0', '0.0'],
       ['92', '-1.95633272148e-05', '-0.00044185042508', '-0.000225',
        '-15.552', '11.664', '8.1'],
       ['93', '0.0', '0.0', '-0.00023163450594', '-1.5811',
        '-2.10818333333', '0.0'],
       ['94', '1.54317197793e-06', '0.0', '0.000231325871544', '0.0',
        '-2.63521666667', '0.0'],
       ['95', '7.79316357267e-05', '0.000231480193134',
        '-1.54317197793e-07', '1.5811', '4.7434', '0.0'],
       ['96', '0.0', '0.0', '-0.00023163639693', '-1.5811',
        '-2.10824804978', '-1.97646103614'],
       ['97', '1.54313408025e-06', '0.0', '0.000231323980274',
        '0.790520877968', '-2.63515195022', '1.97636396147'],
       ['98', '0.0', '0.0', '-0.000488493817566', '-5.0', '-6.66666666667',
        '-1.04166666667'],
       ['99', '4.88005811754e-06', '0.0', '0.000487517805943', '1.25',
        '-8.33333333333', '1.04166666667'],
       ['100', '0.000154941845232', '0.00045750544852',
        '-4.88005811754e-07', '2.5', '7.5', '0.0']])

sortedNodes = sorted(session.domain.nodes.values(), key=lambda n: natural_key(n.label))
r = session.solver.r[session.domain.activeLoadCase.label]
f = session.solver.f[session.domain.activeLoadCase.label]

error=0
for i in range(0,len(sortedNodes)):
    n = sortedNodes[i]
    for j in range(0,3):
        s=float('{:.6g}'.format(r[n.loc[j]]))
        c=float('{:.6g}'.format(float(co[i][j+1])))
        if ( abs(s-c)>abs(0.001*c) and c>1.e-10):
            print "Displacements at node %s do not match. Value is %g and should be %g" % (n.label, s, c )
            error=1
        s=float('{:.6g}'.format(f[n.loc[j]]))
        c=float('{:.6g}'.format(float(co[i][j+4])))
        if ( abs(s-c)>abs(0.001*c) and c>1.e-10 ):
            print "Reactions at node %s do not match. Value is %g and should be %g" % (n.label, s, c )
            error=1
if error:
    print "Test01 failed"
else:
    print "Test01 passed"
